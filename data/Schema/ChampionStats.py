from sqlalchemy import *
from sqlalchemy.dialects import mysql
from sqlalchemy.ext.declarative import declarative_base

global ChampionStats
Base = declarative_base()


class ChampionStats(Base, object):
    __tablename__ = 'ChampionStats'

    _id = Column(BigInteger, primary_key=True)
    champId = Column(Integer)
    key = Column(String(20))
    version = Column(String(10))
    name = Column(String(20))
    infoAttack = Column(Integer)
    infoDefense = Column(Integer)
    infoMagic = Column(Integer)
    infoDifficulty = Column(Integer)
    armor = Column(Float)
    armorPerLevel = Column(Float)
    ad = Column(Float)
    adPerLevel = Column(Float)
    attackRange = Column(Float)
    attackSpeedOffset = Column(Float)
    attackspeedPerLevel = Column(Float)
    crit = Column(Float)
    critPerLevel = Column(Float)
    hp = Column(Float)
    hpPerLevel = Column(Float)
    hpRegen = Column(Float)
    hpRegenPerLevel = Column(Float)
    movespeed = Column(Float)
    mp = Column(Float)
    mpPerLevel = Column(Float)
    mpRegen = Column(Float)
    mpRegenPerLevel = Column(Float)
    mr = Column(Float)
    mrPerLevel = Column(Float)

    def __init__(self, dict:dict):
        self.champId = dict.get("id", 0)
        self.key = dict.get("key", "")
        self.version = dict.get("version", 0)
        self.name = dict.get("name", 0)
        info = dict.get("info", {})
        self.infoAttack = info.get("attack", 0)
        self.infoDefense = info.get("defense", 0)
        self.infoMagic = info.get("magic", 0)
        self.infoDifficulty = info.get("difficulty", 0)
        stats = dict.get("stats", {})
        self.armor = stats.get("armor", 0)
        self.armorPerLevel = stats.get("armorperlevel", 0)
        self.ad = stats.get("attackdamage", 0)
        self.adPerLevel = stats.get("attackdamageperlevel", 0)
        self.attackRange = stats.get("attackrange", 0)
        self.attackSpeedOffset = stats.get("attackspeedoffset", 0)
        self.attackspeedPerLevel = stats.get("attackspeedperlevel", 0)
        self.crit = stats.get("crit", 0)
        self.critPerLevel = stats.get("critperlevel", 0)
        self.hp = stats.get("hp", 0)
        self.hpPerLevel = stats.get("hpperlevel", 0)
        self.hpRegen = stats.get("hpregen", 0)
        self.hpRegenPerLevel = stats.get("hpregenperlevel", 0)
        self.movespeed = stats.get("movespeed", 0)
        self.mp = stats.get("movespeed", 0)
        self.mpPerLevel = stats.get("mpperlevel", 0)
        self.mpRegen = stats.get("mpregen", 0)
        self.mpRegenPerLevel = stats.get("mpregenperlevel", 0)
        self.mr = stats.get("spellblock", 0)
        self.mrPerLevel = stats.get("spellblockperlevel", 0)
