axis.title = element_text(size=12),
axis.text.x = element_text(size=12)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60), group=factor(tier, levels=tiers_order), fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000),breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=12)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60), group=factor(tier, levels=tiers_order), fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000),breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=8),
axis.ticks.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60), group=factor(tier, levels=tiers_order), fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000),breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data=adc.distribution,aes(x=names, y=gamesPlayed)) +
geom_bar(stat='identity', fill="#56B4E9") +
scale_x_discrete(limits=adc.distribution[order(by=gamesPlayed,decreasing = T)][1:30]$names) +
labs(x = "Champion", y = "#matches", title="Distribution of Top 30 ADCs played in Season 7") +
theme_bw() +
theme(axis.text.x = element_text(size=16,angle = 90, hjust = 1),
axis.text.y = element_text(size=6),
title = element_text(size=40),
axis.title = element_text(size=24))
p
p <- ggplot(data=adc.distribution,aes(x=names, y=gamesPlayed)) +
geom_bar(stat='identity', fill="#56B4E9") +
scale_x_discrete(limits=adc.distribution[order(by=gamesPlayed,decreasing = T)][1:30]$names) +
labs(x = "Champion", y = "#matches") +
theme_bw() +
theme(axis.text.x = element_text(size=16,angle = 90, hjust = 1),
axis.text.y = element_text(size=6),
title = element_text(size=40),
axis.title = element_text(size=24))
p
p <- ggplot(data=adc.distribution,aes(x=names, y=gamesPlayed)) +
geom_bar(stat='identity', fill="#56B4E9") +
scale_x_discrete(limits=adc.distribution[order(by=gamesPlayed,decreasing = T)][1:30]$names) +
labs(x = "Champion", y = "#matches") +
theme_bw() +
theme(axis.text.x = element_text(size=8,angle = 45, hjust = 1),
axis.text.y = element_text(size=8),
axis.title = element_text(size=12))
p
p <- ggplot(data=adc.distribution,aes(x=names, y=gamesPlayed/1000)) +
geom_bar(stat='identity', fill="#56B4E9") +
scale_x_discrete(limits=adc.distribution[order(by=gamesPlayed,decreasing = T)][1:30]$names) +
labs(x = "Champion", y = "#matches") +
theme_bw() +
theme(axis.text.x = element_text(size=8,angle = 45, hjust = 1),
axis.text.y = element_text(size=8),
axis.title = element_text(size=12))
p
nrow(adc.distribution)
nrow(adc)
p <- ggplot(data = time_by_tier, aes(x = tier, y=round(gameDuration/60), group=tier, fill=tier)) +
geom_boxplot() +
labs(x = "Skill Tier", y = "Match Duration in Minutes") +
scale_x_discrete(limits=tiers_order) +
scale_y_continuous(breaks=seq(0,maxDuration, 5)) +
theme_bw() +
theme(legend.position = "None",
title=element_text(size=20),
legend.title = element_text(size=16),
axis.title = element_text(size=12)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
time_by_tier %>%
group_by(tier) %>%
summarise(minDuration = min(gameDuration/60),
"25qDuration" = quantile(gameDuration/60 , .25),
meanDuration = mean(gameDuration/60),
"75Duration" = quantile(gameDuration/60 , .75),
maxDuration = max(gameDuration/60)
) -> time_by_tier_agg
p <- ggplot(data = time_by_tier, aes(x = tier, y=round(gameDuration/60), group=tier, fill=tier)) +
geom_boxplot() +
labs(x = "Skill Tier", y = "Match Duration in Minutes") +
scale_x_discrete(limits=tiers_order) +
scale_y_continuous(breaks=seq(0,maxDuration, 5)) +
theme_bw() +
theme(legend.position = "None",
title=element_text(size=20),
legend.title = element_text(size=16),
axis.title = element_text(size=12)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60), group=factor(tier, levels=tiers_order), fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000),breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
2 %in% [1,2]
2 %in% (1,2)
2 %in% c(1,2)
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order),
color = ifelse(gameDuration/60 %in% c(20,22), "red", NULL))) +
geom_histogram(aes(y=..count../1000),breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
time_by_tier_region$clr = ifelse(gameDuration/60 %in% c(20,22), "red", "white")
time_by_tier_region$clr = ifelse(time_by_tier_region$gameDuration/60 %in% c(20,22), "red", "white")
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order),
color = clr)) +
geom_histogram(aes(y=..count../1000),breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order),
color = clr)) +
geom_histogram(aes(y=..count../1000),breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000), color = clr, breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000, color = clr), breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
time_by_tier_region$clr
time_by_tier_region[clr=="white"]
time_by_tier_region[clr=="red"]
ifelse(time_by_tier_region$gameDuration/60 %in% c(20,22), "red", "white")
ifelse(time_by_tier_region$gameDuration/60 %in% c(20,21), "red", "white")
ifelse(time_by_tier_region$gameDuration %in% c(1200,1260), "red", "white")
time_by_tier_region$clr = ifelse(time_by_tier_region$gameDuration %in% c(1200,1260), "red", "white")
time_by_tier_region[clr=="white"]
time_by_tier_region[clr=="red"]
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000, color = clr), breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000, colour = clr), breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000, colour = clr), breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
colour = clr,
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000), breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
colour = clr,
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000), breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
colour = clr,
group=factor(tier, levels=tiers_order),
fill=clr)) +
geom_histogram(aes(y=..count../1000), breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
p <- ggplot(data = time_by_tier_region, aes(round(gameDuration/60),
group=factor(tier, levels=tiers_order),
fill=factor(tier, levels=tiers_order))) +
geom_histogram(aes(y=..count../1000), breaks = c(seq(0,maxDuration, by=1))) +
scale_x_continuous(breaks=seq(0,maxDuration,10)) +
facet_wrap(~factor(tier, levels=tiers_order), ncol=2) +
labs(x = "Skill Tier", y = "Match Duration") +
theme_bw() +
theme(legend.position = "None",
axis.title = element_text(size=12),
axis.text.x = element_text(size=6)) +
scale_fill_manual("Skill Tier", values=c("CHALLENGER"="orange",
"MASTER"="#966F33",
"DIAMOND"="#cbe3f0",
"PLATINUM"="#A0BFB4",
"GOLD"="#e6c200",
"SILVER"="#c0c0c0",
"BRONZE"="#cd7f32",
"UNRANKED"="black"))
p
phy_dmg_red = function(x){ return 100/(100+x)}
phy_dmg_red = function(x){return 100/(100+x)}
phy_dmg_red = function(x){return (100/(100+x))}
phy_dmg_red(100)
phy_dmg_red(0)
phy_dmg_red = function(x){return 1-(100/(100+x))}
phy_dmg_red = function(x){return (1-(100/(100+x)))}
phy_dmg_red(0)
phy_dmg_red(100)
phy_dmg_red(30)
plot(phy_dmg_red(1:300),type='l')
ggplot() + stat_function(phy_dmg_red)
ggplot() + stat_function(fun= phy_dmg_red)
ggplot(data = data.frame(x = 0), mapping = aes(x = x)) + stat_function(phy_dmg_red)
ggplot(data = data.frame(x = 0), mapping = aes(x = x)) + stat_function(fun=phy_dmg_red)
ggplot(data = data.frame(x = 0), mapping = aes(x = x)) + stat_function(fun=phy_dmg_red) + xlim(0,300)
phy_dmg_red = function(x){return (1-(100/(100+x)))}
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x)) + stat_function(fun=phy_dmg_red) + xlim(0,300)
p
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x)) +
stat_function(fun=phy_dmg_red) + xlim(0,300) +
theme_bw()
p
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x)) +
stat_function(fun=phy_dmg_red) + xlim(0,300) +
labs(x="Amount of Armour", y="Physyical Damage Reduction")
theme_bw()
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x)) +
stat_function(fun=phy_dmg_red) + xlim(0,300) +
labs(x="Amount of Armour", y="Physyical Damage Reduction") +
theme_bw()
p
ArP_622 = function(level, leth) { return (0.4 * leth + 0.6 * level/18 * leth)}
ArP_622(1,10)
ArP_622 = function(level, leth) { return (leth * (0.4 + 0.6 * leth * level/18)}
ArP_622 = function(level, leth) { return (leth * (0.4 + 0.6 * leth * level/18))}
ArP_622(1,10)
ArP_72 = function(level, leth) { return (0.6 * leth + 0.4 * level/18 * leth)}
ArP_622 = function(level, leth) { return (0.4 * leth + 0.6 * level/18 * leth)}
ArP_72 = function(level, leth) { return (0.6 * leth + 0.4 * level/18 * leth)}
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x)) +
stat_function(fun=ArP_622) + xlim(0,300) +
stat_function(fun=ArP_72) +
labs(x="Amount of Armour", y="Physyical Damage Reduction") +
theme_bw()
p
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x)) +
stat_function(fun=ArP_622(leth=10)) + xlim(0,300) +
stat_function(fun=ArP_72(leth=10)) +
labs(x="Amount of Armour", y="Physyical Damage Reduction") +
theme_bw()
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x)) +
stat_function(fun=ArP_622(10)) + xlim(0,300) +
stat_function(fun=ArP_72(10)) +
labs(x="Amount of Armour", y="Physyical Damage Reduction") +
theme_bw()
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x)) +
stat_function(fun=ArP_622(10)) + xlim(0,300) +
stat_function(fun=ArP_72(10)) +
labs(x="Amount of Armour", y="Physyical Damage Reduction") +
theme_bw()
c
c
c
c
c
c
n
n
p
f
s
s
s
s
c
Q
Q
Q
Q
Q
Q
Q
