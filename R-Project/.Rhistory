colorRampPalette(brewer.pal(8, "Accent"))(kmeans3$cluster)
plot3d(fit2[,2:4], size = 10, col = kmeans3)
kmeans3
plot3d(fit2[,2:4], size = 10, col = kmeans3$cluster)
text3d(fit2[,2:4], texts = fit2$name, size=2)
source("initialize.R")
p <- ggplot(data=top.distribution,aes(x=names, y=gamesPlayed)) +
geom_bar(stat='identity') +
scale_x_discrete(limits=top.distribution[order(by=gamesPlayed,decreasing = T)]$names) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.text.y = element_text(size=6))
p
p <- ggplot(data=jungle.distribution,aes(x=names, y=gamesPlayed)) +
geom_bar(stat='identity') +
scale_x_discrete(limits=jungle.distribution[order(by=gamesPlayed,decreasing = T)]$names) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.text.y = element_text(size=6))
p
p <- ggplot(data=mid.distribution,aes(x=names, y=gamesPlayed)) +
geom_bar(stat='identity') +
scale_x_discrete(limits=mid.distribution[order(by=gamesPlayed,decreasing = T)]$names) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.text.y = element_text(size=6))
p
## attempt to scale into 3d and illustrate
adc.performance.patch %>%
rownames_to_column(var="id") -> adc.cmd
adc.cmd.numerics = adc.cmd[,-c("name", "championId", "lane", "role", "patch")]
setkey(adc.cmd.numerics, "id")
rownames(adc.cmd.numerics) = adc.cmd.numerics$id
adc.cmd.dist <- dist(adc.cmd.numerics[,-1])
colnames(adc.cmd.dist) = rownames
fit <- cmdscale(adc.cmd.dist, k = 3)
data.table(fit) %>%
rownames_to_column(var = "id") %>%
merge(adc.cmd[,c("id","name", "patch")], by="id") -> fit2
kmeans3 = kmeans(x = fit2[,2:4], centers = 3)
kmeans4 = kmeans(x = fit2[,2:4], centers = 4)
kmeans5 = kmeans(x = fit2[,2:4], centers = 5)
kmeans6 = kmeans(x = fit2[,2:4], centers = 6)
plot3d(fit2[,2:4], size = 10, col = kmeans3$cluster)
library(rgl)
plot3d(fit2[,2:4], size = 10, col = kmeans3$cluster)
text3d(fit2[,2:4], texts = fit2$name, size=2)
fit2$cluster3 = kmeans3$cluster
fit2$cluster4 = kmeans4$cluster
fit2$cluster5 = kmeans5$cluster
fit2$cluster6 = kmeans6$cluster
plot3d(fit2[,2:4], size = 10, col = fit2$cluster3)
text3d(fit2[,2:4], texts = fit2$name, size=2)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster3)
text3d(fit2[,2:4], texts = fit2$name, size=2)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster4)
text3d(fit2[,2:4], texts = fit2$name, size=2)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster4)
text3d(fit2[,2:4], texts = fit2$name, size=2)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster5)
text3d(fit2[,2:4], texts = fit2$name, size=2)
fit <- cmdscale(adc.cmd.dist, k = 3)
data.table(fit) %>%
rownames_to_column(var = "id") %>%
merge(adc.cmd[,c("id","name", "patch")], by="id") -> fit2
kmeans3 = kmeans(x = fit2[,2:4], centers = 3)
kmeans4 = kmeans(x = fit2[,2:4], centers = 4)
kmeans5 = kmeans(x = fit2[,2:4], centers = 5)
kmeans6 = kmeans(x = fit2[,2:4], centers = 6)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster5)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster5)
kmeans5 = kmeans(x = fit2[,2:4], centers = 5)
fit2$cluster3 = kmeans3$cluster
fit2$cluster4 = kmeans4$cluster
fit2$cluster5 = kmeans5$cluster
fit2$cluster6 = kmeans6$cluster
plot3d(fit2[,2:4], size = 10, col = fit2$cluster5)
text3d(fit2[,2:4], texts = fit2$name, size=2)
fit2
paste0(fit2$name, " ", fit2$patch)
fit2$detailedName = paste0(fit2$name, " ", fit2$patch)
fit2$detailedName = paste0(fit2$name, " ", fit2$patch)
kmeans3 = kmeans(x = fit2[,2:4], centers = 3)
kmeans4 = kmeans(x = fit2[,2:4], centers = 4)
kmeans5 = kmeans(x = fit2[,2:4], centers = 5)
kmeans6 = kmeans(x = fit2[,2:4], centers = 6)
fit2$cluster3 = kmeans3$cluster
fit2$cluster4 = kmeans4$cluster
fit2$cluster5 = kmeans5$cluster
fit2$cluster6 = kmeans6$cluster
plot3d(fit2[,2:4], size = 10, col = fit2$cluster5)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster5)
text3d(fit2[,2:4], texts = fit2$detailedName, size=2)
#bar chart perspective
df %>%
ggplot(aes(x=variable, y=value, group= name, fill = name)) +
geom_bar(stat="identity") +
geom_line(y = 0.5, linetype  =2, color = "black") +
facet_grid(name ~ factor(patch, levels=patchOrder)) +
coord_flip() +
theme_igray() + scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(length(unique(df$name)))) +
theme(axis.text.y = element_text(size = 5), legend.position="none")
### attempt to illustrate specific traits of adcs
dfprep = adc.performance.patch %>%
select(
name, patch,
winrate,
DmgDealt = totalDamageToChampions,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
df = dfprep %>%
rownames_to_column( var = "champ" ) %>%
mutate_each(funs(rescale), -c(champ,name,patch)) %>%
melt(id.vars=c('champ','name','patch'), measure.vars=colnames(dfprep[,-c("name","patch")])) %>%
arrange(champ)
#bar chart perspective
df %>%
ggplot(aes(x=variable, y=value, group= name, fill = name)) +
geom_bar(stat="identity") +
geom_line(y = 0.5, linetype  =2, color = "black") +
facet_grid(name ~ factor(patch, levels=patchOrder)) +
coord_flip() +
theme_igray() + scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(length(unique(df$name)))) +
theme(axis.text.y = element_text(size = 5), legend.position="none")
dfprep = adc.performance.patch %>%
select(
name, patch,
games,
summoners,
winrate,
DmgDealt = totalDamageToChampions,
DPS = totalDamageToChampions/gameDuration,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
dfprep = adc.performance.patch %>%
select(
name, patch,
games,
summoners,
winrate,
DmgDealt = totalDamageToChampions,
DPS = totalDamageToChampions/gameDuration,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
dfprep = adc.performance.patch %>%
select(
name, patch,
games,
summoners,
winrate,
DmgDealt = totalDamageToChampions,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
dfprep = adc.performance.patch %>%
select(
name, patch,
games,
summoners,
winrate,
DmgDealt = totalDamageToChampions,
DPS = totalDamageToChampions/gameDuration,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
dfprep = adc.performance.patch %>%
select(
name, patch,
games,
summoners,
winrate,
DmgDealt = totalDamageToChampions,
DPS := totalDamageToChampions/gameDuration,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
dfprep = adc.performance.patch
dfprep = adc.performance.patch %>%
muate(DPS = totalDamageToChampions/gameDuration) %>%
select(
name, patch,
games,
summoners,
winrate,
DPS,
DmgDealt = totalDamageToChampions,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
dfprep = adc.performance.patch %>%
mutate(DPS = totalDamageToChampions/gameDuration) %>%
select(
name, patch,
games,
summoners,
winrate,
DPS,
DmgDealt = totalDamageToChampions,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
df = dfprep %>%
rownames_to_column( var = "champ" ) %>%
mutate_each(funs(rescale), -c(champ,name,patch)) %>%
melt(id.vars=c('champ','name','patch'), measure.vars=colnames(dfprep[,-c("name","patch")])) %>%
arrange(champ)
dfprep
df = dfprep %>%
rownames_to_column( var = "champ" ) %>%
mutate_each(funs(rescale), -c(champ,name,patch)) %>%
melt(id.vars=c('champ','name','patch'), measure.vars=colnames(dfprep[,-c("name","patch")])) %>%
arrange(champ)
df = dfprep %>%
rownames_to_column( var = "champ" )
df = dfprep %>%
rownames_to_column( var = "champ" ) %>%
mutate_each(funs(rescale), -c(champ,name,patch))
df
dfprep[,-c("name","patch")])
dfprep[,-c("name","patch")]
drprep
dfprep
dfprep[,-c("name","patch")]
dfprep[-c("name","patch")]
dfprep[,-c("name","patch")]
dfprep = adc.performance.patch %>%
mutate(DPS = totalDamageToChampions/gameDuration) %>%
select(
name, patch,
games,
summoners,
winrate,
DPS,
DmgDealt = totalDamageToChampions,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
df = data.table(dfprep) %>%
rownames_to_column( var = "champ" ) %>%
mutate_each(funs(rescale), -c(champ,name,patch)) %>%
melt(id.vars=c('champ','name','patch'), measure.vars=colnames(dfprep[,-c("name","patch")])) %>%
arrange(champ)
df = data.table(dfprep) %>%
rownames_to_column( var = "champ" ) %>%
mutate_each(funs(rescale), -c(champ,name,patch)) %>%
melt(id.vars=c('champ','name','patch'), measure.vars=colnames(dfprep[,-c("name","patch")])) %>%
arrange(champ)
dfprep = adc.performance.patch %>%
mutate(DPS = totalDamageToChampions/gameDuration) %>%
select(
name, patch,
games,
summoners,
winrate,
DPS,
DmgDealt = totalDamageToChampions,
kills,
assists,
deaths,
DmgTaken = totalDamageTaken,
cs = csPerGame,
gold = goldEarned
)
dfprep = data.table(dfprep)
df = dfprep %>%
rownames_to_column( var = "champ" ) %>%
mutate_each(funs(rescale), -c(champ,name,patch)) %>%
melt(id.vars=c('champ','name','patch'), measure.vars=colnames(dfprep[,-c("name","patch")])) %>%
arrange(champ)
df
df %>%
ggplot(aes(x=variable, y=value, group= name, fill = name)) +
geom_bar(stat="identity") +
geom_line(y = 0.5, linetype  =2, color = "black") +
facet_grid(name ~ factor(patch, levels=patchOrder)) +
coord_flip() +
theme_igray() + scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(length(unique(df$name)))) +
theme(axis.text.y = element_text(size = 5), legend.position="none")
adc.performance.patch %>%
rownames_to_column(var="id") -> adc.cmd
adc.cmd.numerics = adc.cmd[,-c("name", "championId", "lane", "role", "patch")]
setkey(adc.cmd.numerics, "id")
rownames(adc.cmd.numerics) = adc.cmd.numerics$id
adc.cmd.dist <- dist(adc.cmd.numerics[,-1])
colnames(adc.cmd.dist) = rownames
fit <- cmdscale(adc.cmd.dist, k = 3)
data.table(fit) %>%
rownames_to_column(var = "id") %>%
merge(adc.cmd[,c("id","name", "patch")], by="id") -> fit2
fit2$detailedName = paste0(fit2$name, " ", fit2$patch)
kmeans3 = kmeans(x = fit2[,2:4], centers = 3)
kmeans4 = kmeans(x = fit2[,2:4], centers = 4)
kmeans5 = kmeans(x = fit2[,2:4], centers = 5)
kmeans6 = kmeans(x = fit2[,2:4], centers = 6)
fit2$cluster3 = kmeans3$cluster
fit2$cluster4 = kmeans4$cluster
fit2$cluster5 = kmeans5$cluster
fit2$cluster6 = kmeans6$cluster
plot3d(fit2[,2:4], size = 10, col = fit2$cluster3)
text3d(fit2[,2:4], texts = fit2$detailedName, size=2)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster4)
text3d(fit2[,2:4], texts = fit2$detailedName, size=2)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster5)
text3d(fit2[,2:4], texts = fit2$detailedName, size=2)
plot3d(fit2[,2:4], size = 10, col = fit2$cluster6)
text3d(fit2[,2:4], texts = fit2$detailedName, size=2)
df %>%
ggplot(aes(x=variable, y=value, group= name, fill = name)) +
geom_bar(stat="identity") +
geom_line(y = 0.5, linetype  =2, color = "black") +
facet_grid(factor(patch, levels=patchOrder)~name) +
coord_flip() +
theme_igray() + scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(length(unique(df$name)))) +
theme(axis.text.y = element_text(size = 5), legend.position="none")
df %>%
ggplot(aes(x=variable, y=value, group=name, color=name)) +
geom_polygon(fill=NA) +
coord_radar() + theme_bw() + facet_grid(factor(patch, levels=patchOrder)~name) +
#scale_x_discrete(labels = abbreviate) +
theme(axis.text.x = element_text(size = 5), legend.position="none")
df[name %in% adc.set] %>%
ggplot(aes(x=variable, y=value, group=name, color=name)) +
geom_polygon(fill=NA) +
coord_radar() + theme_bw() + facet_grid(factor(patch, levels=patchOrder)~name) +
#scale_x_discrete(labels = abbreviate) +
theme(axis.text.x = element_text(size = 5), legend.position="none")
df = data.table(df)
df[name %in% adc.set] %>%
ggplot(aes(x=variable, y=value, group=name, color=name)) +
geom_polygon(fill=NA) +
coord_radar() + theme_bw() + facet_grid(factor(patch, levels=patchOrder)~name) +
#scale_x_discrete(labels = abbreviate) +
theme(axis.text.x = element_text(size = 5), legend.position="none")
adc.set1 <- c("Varus", "Jhin", "Ashe")
adc.set2 <- c("Lucian", "Ezreal", "Miss Fortune")
adc.set3 <- c("Caitlyn", "Tristana", "Kog'Maw")
adc.set <- adc.set1
#radar charts: better filter out some champs
df[name %in% adc.set] %>%
ggplot(aes(x=variable, y=value, group=name, color=name)) +
geom_polygon(fill=NA) +
coord_radar() + theme_bw() + facet_grid(factor(patch, levels=patchOrder)~name) +
#scale_x_discrete(labels = abbreviate) +
theme(axis.text.x = element_text(size = 5), legend.position="none")
df[name %in% adc.set] %>%
ggplot(aes(x=variable, y=value, group=name, color=name)) +
geom_polygon(fill=NA) +
coord_radar() + theme_bw() + facet_grid(name~factor(patch, levels=patchOrder)) +
#scale_x_discrete(labels = abbreviate) +
theme(axis.text.x = element_text(size = 5), legend.position="none")
df[name %in% c(adc.set1,adc.set2)] %>%
ggplot(aes(x=variable, y=value, group=name, color=name)) +
geom_polygon(fill=NA) +
coord_radar() + theme_bw() + facet_grid(name~factor(patch, levels=patchOrder)) +
#scale_x_discrete(labels = abbreviate) +
theme(axis.text.x = element_text(size = 5), legend.position="none")
adc.set1 <- c("Varus", "Jhin", "Ashe","Lucian", "Ezreal", "Caitlyn", "Tristana", "Kog'Maw")
adc.set <- adc.set1
df[name %in% c(adc.set1,adc.set2)] %>%
ggplot(aes(x=variable, y=value, group=name, color=name)) +
geom_polygon(fill=NA) +
coord_radar() + theme_bw() + facet_grid(name~factor(patch, levels=patchOrder)) +
#scale_x_discrete(labels = abbreviate) +
theme(axis.text.x = element_text(size = 5), legend.position="none")
adc.performance.patch %>%
ggplot(aes(x = totalDamageToChampions)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(.~name)
adc.performance.patch %>%
ggplot(aes(x = totalDamageToChampions)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(. ~ name)
adc.performance.patch %>%
ggplot(aes(y = totalDamageToChampions, x = patch)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(. ~ name)
adc.performance.patch[name %in% adc.relevant] %>%
ggplot(aes(y = totalDamageToChampions, x = patch)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(. ~ name)
adc.relevant
adc.performance.patch[name %in% relchamps.adc] %>%
ggplot(aes(y = totalDamageToChampions, x = patch)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(. ~ name)
relchamps.adc
adc.performance.patch[championId %in% relchamps.adc] %>%
ggplot(aes(y = totalDamageToChampions, x = patch)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(. ~ name)
adc.performance.patch[championId %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions, x = patch)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(. ~ name)
adc.performance.patch[championId %in% adc.set]
adc.performance.patch[,championId %in% adc.set]
adc.performance.patch[championId %in% adc.set]
adc.performance.patch[name %in% adc.set]
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions, x = patch)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(. ~ name)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions, x = patch)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(. ~ name)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions, x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(. ~ name)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions, x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_grid(. ~ name)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions, x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_grid(name~.)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions/gameDuration, x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_grid(name~.)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions/gameDuration, x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_grid(name~., ncol=5)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions/gameDuration, x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(~name, ncol = 5)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions, x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(~name, ncol = 4)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = totalDamageToChampions/(gameDuration/60), x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(~name, ncol = 4)
p <- ggplot(data=adc.distribution,aes(x=names, y=gamesPlayed)) +
geom_bar(stat='identity') +
scale_x_discrete(limits=adc.distribution[order(by=gamesPlayed,decreasing = T)]$names) +
theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.text.y = element_text(size=6))
p
relchamps.adc.names <- adc[,list(gamesPlayed = .N), by = championId][order(by = gamesPlayed, decreasing = T)][,.SD[1:16]][,name]
relchamps.adc.names <- adc[,list(gamesPlayed = .N), by = championId][order(by = gamesPlayed, decreasing = T)][,.SD[1:16]][,name]
adc
adc.performance.patch
adc.performance.patch[championId %in% relchamps.adc] %>%
ggplot(aes(y = totalDamageToChampions/(gameDuration/60), x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(~name, ncol = 4)
adc.performance.patch[name %in% adc.set] %>%
ggplot(aes(y = gameDuration, x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(~name, ncol = 4)
adc.performance.patch[championId %in% relchamps.adc] %>%
ggplot(aes(y = gameDuration, x = patch, group=name)) +
geom_line() +
scale_x_discrete(limits=patchOrder) +
facet_wrap(~name, ncol = 4)
